pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'surajv/getting-started-app'  // Change to your Docker Hub username/repo
        KUBE_CONFIG = credentials('kubeconfig-credential-id')  // Replace with your Jenkins credentials ID for Kubernetes config
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials')  // Replace with your Jenkins credentials ID for Docker Hub
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/suraj-v86/getting-started-app.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Install dependencies using Yarn
                    sh 'yarn install'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    sh "docker build -t surajv86/getting-started-app:123 ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Login to Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    }

                    // Push Docker image to Docker Hub
                    sh "docker push surajv86/getting-started-app:123"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Use kubectl to apply the Kubernetes configuration files
                    withCredentials([file(credentialsId: 'kube-config', variable: 'KUBE_CONFIG')]) {
                        sh 'kubectl apply -f kubernetes/namespace.yml'
                        sh 'kubectl apply -f kubernetes/deployment.yml'
                        sh 'kubectl apply -f kubernetes/service.yml'
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Optionally, you can clean up Docker images after deployment
                    sh "docker rmi $surajv86/getting-started-app:123"
                }
            }
        }
    }

    post {
        success {
            echo 'Build and deployment were successful!'
            // Add any post-success actions, like Slack notifications
        }
        failure {
            echo 'Build or deployment failed!'
            // Add failure notifications here
        }
    }
}
